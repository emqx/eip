@startuml
scale 1024 width

participant "RLOG server" as server #ffc
participant "RLOG agent" as agent #ffc
participant "RLOG bootstrapper" as boot_serv #ffc

participant "RLOG replica" as repl #ccf
participant "bootstrap client" as boot_client #ccf

activate server
activate repl

group Agent initialization
  repl -> server : {connect, LocalCheckpointTS}
  note over server : LocalCheckpointTS is too old.\n Client needs to bootstrap
  server -\\ agent : spawn(now() - SafeInterval)
  activate agent
  repl <- server : {need_bootstrap, AgentPID}
end

group Bootstraper initialization
  hnote over repl : bootstrap

  repl -\\ boot_client : spawn()
  activate boot_client

  boot_client -> server : {bootstrap, self()}
  server -\\ boot_serv : spawn(RemotePid)
  activate boot_serv

  boot_serv -> boot_serv : mnesia:dirty_all_keys\nfor each table in shard

  server -> boot_client : {ok, Pid}
end

group Bootstrap
  note over boot_serv : Iterate through the\ncached keys
  loop
    boot_serv -> boot_client : {batch, [{Tab, Record}]}
    boot_client -> boot_client : import batch to the\ntable replica
    boot_serv <- boot_client : ok
  end

  note over agent : At the same time...

  loop
    agent -> repl : {batch, [MnesiaOps]}
    repl -> repl : cache batch to the local rlog
  end

  boot_serv -> boot_client : bootstrap_complete
  deactivate boot_serv
  boot_client -> repl : bootstrap_complete
  deactivate boot_client
end

group local_replay
  hnote over repl : local_replay

  note over repl : Iterate through the\ncached transactions

  loop
    agent -> repl : {batch, [MnesiaOps]}
    repl -> repl : cache batch in the local rlog

    repl -> repl : Import ops from the local rlog\nto the local replica
  end

  note over repl : Reached the end of\nthe local rlog
end

hnote over repl : normal

loop
  agent -> repl : {batch, [MnesiaOps]}
  repl -> repl : Import batch to the\nlocal replica
end

@enduml